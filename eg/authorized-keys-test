#!/usr/local/bin/perl
use strict;
use warnings;
use Net::SSH::AuthorizedKeysFile;
use Log::Log4perl qw(:easy);
use Getopt::Std;

getopts("sv", \my %opts);

my $level = $INFO;

if($opts{v}) {
    $level = $DEBUG;
}

Log::Log4perl->easy_init({ level => $level, layout => "%F{1}-%L: %m%n" });

my($file) = @ARGV;

die "usage: $0 file" unless defined $file;

my $ak = Net::SSH::AuthorizedKeysFile->new( file => $file );
my $rc = $ak->read();

if($rc) {
    print "$file ok\n";
} else {
    print "$file not ok\n";
}

__END__

=head1 NAME

    authorized-keys-test - Validate a authorized_keys file

=head1 SYNOPSIS

    authorized-keys-test ~/.ssh/authorized_keys

=head1 DESCRIPTION

authorized-keys-test reads in the keys of an ssh client authorized_keys
file and reports any errors.

=head1 OPTIONS

=over 4

=item -v

Verbose mode. Turns on DEBUG instead of INFO.

=item -s

Strict mode. If on, the test insists on properly formatted authorized_keys
files and isn't nearly as lenient as the sshd daemon's parser.

=back

=head1 EXAMPLES

  $ authorized-keys-test ~/.ssh/authorized_keys

=head1 LEGALESE

Copyright 2009 by Mike Schilli, all rights reserved.
This program is free software, you can redistribute it and/or
modify it under the same terms as Perl itself.

=head1 AUTHOR

2009, Mike Schilli <cpan@perlmeister.com>
